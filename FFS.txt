//Flood fill algorithm (8 neighburhood method)

#include<GL/glut.h>
#include<iostream>
#include<vector>

#define SCR_HT 480


using namespace std;

bool flag=false;

float old_color[3]={0,1,1}; 
float fill_color[3]={1,0,0};

class Point
{
    public:
        int x;
        int y;
};

vector<Point> polygon_points;

void init()
{
    glClearColor(1,1,1,1);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0,640,0,480);
}

void display()
{
    glColor3f(0,1,1);
    glFlush();
}

void flood_fill(int x,int y)
{
    float current_color[3];
    glReadPixels(x,y,1.0,1.0,GL_RGB, GL_FLOAT, current_color);

    //if current color and old color is same
    if(current_color[0]==old_color[0] && current_color[1]==old_color[1] && current_color[2]==old_color[2])
    {
        glColor3f(fill_color[0],fill_color[1],fill_color[2]);
        glBegin(GL_POINTS);
            glVertex2i(x,y);
        glEnd();
        glFlush();

        //8 neigbourhood method

        flood_fill(x+1, y);
        flood_fill(x-1, y);
        flood_fill(x, y+1);
        flood_fill(x, y-1);
        flood_fill(x+1, y+1);
        flood_fill(x+1, y-1);
        flood_fill(x-1, y+1);
        flood_fill(x-1, y-1);
 
    }
    return;
}

void mouse_handler(int btn, int state, int x, int y)
{
    if(btn==GLUT_LEFT && state==GLUT_DOWN)
    {
        if(!flag)
        {
            y=SCR_HT-y;
            Point new_point;
            new_point.x=x;
            new_point.y=y;
            polygon_points.push_back(new_point);
            
        }

        if(flag) //to fill the polygon
        {  
            y=SCR_HT-y;
            flood_fill(x,y);
        }
    }

    


    if(btn==GLUT_RIGHT_BUTTON && state==GLUT_DOWN)
    {
        int i;
        flag=true;

        glColor3f(0,1,1);
        glBegin(GL_POLYGON);
            for(i=0;i<polygon_points.size();i++)
            {
                glVertex2f(polygon_points[i].x, polygon_points[i].y);
            }

        glEnd();
        glFlush();
    }
}

int main(int argc, char** argv)
{
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);
    glutInitWindowPosition(100,100);
    glutInitWindowSize(640,480);
    glutCreateWindow("Flood Fill ");
    glutDisplayFunc(display);
    glutMouseFunc(mouse_handler);
    init();
    glutMainLoop();

}